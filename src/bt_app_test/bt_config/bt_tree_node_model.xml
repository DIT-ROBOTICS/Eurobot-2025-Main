<root BTCPP_format="4">
    <TreeNodesModel>
        <Action ID="BTMission">
            <input_port name="action_name" type="std::string"/>
            <output_port name="sequence" type="std::deque&lt;int, std::allocator&lt;int&gt; &gt;"/>
            <input_port name="order" type="int"/>
        </Action>
        <Decorator ID="ElapseTimeCheck">
            <input_port name="max_time_count" type="double"/>
        </Decorator>
        <Action ID="GeneratePathPoint">
            <output_port name="path_point" type="std::shared_ptr&lt;std::deque&lt;geometry_msgs::msg::TwistStamped_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::msg::TwistStamped_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt; &gt;"/>
        </Action>
        <Action ID="LocalizationTemp">
            <output_port name="output" type="geometry_msgs::msg::TwistStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="input" type="std::string"/>
        </Action>
        <Decorator ID="LoopWayPoint">
            <output_port name="value" type="geometry_msgs::msg::TwistStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="if_empty" type="BT::NodeStatus" default="SUCCESS">Status to return if queue is empty: SUCCESS, FAILURE, SKIPPED</input_port>
            <inout_port name="queue" type="std::shared_ptr&lt;std::deque&lt;geometry_msgs::msg::TwistStamped_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::msg::TwistStamped_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt; &gt;"/>
        </Decorator>
        <Action ID="NavigationTemp">
            <input_port name="goal" type="geometry_msgs::msg::TwistStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="action_name" type="std::string" default="">Action server name</input_port>
        </Action>
        <Decorator ID="RaceTimeCheck">
            <input_port name="max_time_count" type="double"/>
        </Decorator>
        <Condition ID="StandardTopicPub">
            <input_port name="add_number" type="int"/>
            <input_port name="base_number" type="int"/>
            <output_port name="total_number" type="int"/>
            <input_port name="topic_name" type="std::string"/>
        </Condition>
        <Condition ID="StandardTopicSub">
            <output_port name="output" type="int"/>
            <input_port name="topic_name" type="std::string"/>
        </Condition>
        <Action ID="StartRace">
            <output_port name="output" type="std::string"/>
        </Action>
        <Action ID="Testing">
            <output_port name="output" type="std::string"/>
            <input_port name="input" type="std::string"/>
        </Action>
        <Decorator ID="TickFlow">
            <input_port name="max_tick_count" type="int"/>
        </Decorator>
        <Action ID="TopicPubTest">
            <input_port name="add_number" type="int"/>
            <input_port name="base_number" type="int"/>
            <output_port name="total_number" type="int"/>
            <input_port name="topic_name" type="std::string"/>
        </Action>
        <Action ID="TopicSubTest">
            <output_port name="output" type="int"/>
        </Action>
    </TreeNodesModel>
</root>
