<root BTCPP_format="4">
    <TreeNodesModel>
        <Decorator ID="ElapseTimeCheck">
            <input_port name="max_time_count" type="double"/>
        </Decorator>
        <Action ID="GeneratePathPoint">
            <output_port name="path_point" type="std::shared_ptr&lt;std::deque&lt;geometry_msgs::msg::TwistStamped_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::msg::TwistStamped_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt; &gt;"/>
        </Action>
        <Decorator ID="LoopWayPoint">
            <output_port name="value" type="geometry_msgs::msg::TwistStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
            <input_port name="if_empty" type="BT::NodeStatus" default="SUCCESS">Status to return if queue is empty: SUCCESS, FAILURE, SKIPPED</input_port>
            <inout_port name="queue" type="std::shared_ptr&lt;std::deque&lt;geometry_msgs::msg::TwistStamped_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::msg::TwistStamped_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt; &gt;"/>
        </Decorator>
        <Decorator ID="RaceTimeCheck">
            <input_port name="max_time_count" type="double"/>
        </Decorator>
        <Action ID="SimpleNavigation">
            <input_port name="goal" type="geometry_msgs::msg::TwistStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Action>
        <Action ID="StartRace">
            <output_port name="output" type="std::string"/>
        </Action>
        <Action ID="Testing">
            <output_port name="output" type="std::string"/>
            <input_port name="input" type="std::string"/>
        </Action>
        <Decorator ID="TickFlow">
            <input_port name="max_tick_count" type="int"/>
        </Decorator>
    </TreeNodesModel>
</root>
